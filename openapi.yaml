openapi: 3.0.1
info:
  title: Bookstore API
  description: API for managing a bookstore's inventory
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Local development server
paths:
  /books:
    get:
      summary: Retrieve all books
      responses:
        "200":
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
    post:
      summary: Create a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookInput"
      responses:
        "201":
          description: Book created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "400":
          description: Invalid input
  /books/{id}:
    get:
      summary: Retrieve a book by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Book found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "404":
          description: Book not found
    put:
      summary: Update a book by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookInput"
      responses:
        "200":
          description: Book updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Book"
        "404":
          description: Book not found
    delete:
      summary: Delete a book by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Book deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Book deleted successfully
        "404":
          description: Book not found
components:
  schemas:
    Book:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        author:
          type: string
        year:
          type: integer
        genre:
          type: string
      required:
        - title
        - author
        - year
        - genre
    BookInput:
      type: object
      properties:
        title:
          type: string
        author:
          type: string
        year:
          type: integer
        genre:
          type: string
      required:
        - title
        - author
        - year
        - genre
